# Copyright 2021 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~

include "backend.conf"

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

# Provides an implementation of HttpClient. Use `uk.gov.hmrc.play.bootstrap.HttpClientModule` or create your own.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"

# Provides an implementation of AuthConnector. Use `uk.gov.hmrc.play.bootstrap.AuthModule` or create your own.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform backend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.MicroserviceModule"
play.http.filters = "uk.gov.hmrc.play.bootstrap.filters.MicroserviceFilters"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.http.JsonErrorHandler"

appName=industry-classification-lookup

# Play Modules
# ~~~~
# Additional play modules can be added here
play.modules.enabled += "play.modules.reactivemongo.ReactiveMongoHmrcModule"

# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.crypto.secret="OvHkZZmMcANPFyMpHwgjpXq9NJKnmwuxp8YomfkNChrTeqTVZrg89ylSIjO6ybyW"

# Session configuration
# ~~~~~
application.session.httpOnly=false

application.session.secure=false

# The application languages
# ~~~~~
application.langs="en"

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router=prod.Routes

# Fix for SSLEngine closed already exception
http-verbs.retries.ssl-engine-closed-already.enabled = true

index {
  path = "target/scala-2.11/resource_managed/main/conf/index"
  default = "ons-supplement-sic5"
}

sic {
  sector {
    A = "Agriculture, Forestry And Fishing"
    B = "Mining And Quarrying"
    C = "Manufacturing"
    D = "Electricity, Gas, Steam And Air Conditioning Supply"
    E = "Water Supply; Sewerage, Waste Management And Remediation Activities"
    F = "Construction"
    G = "Wholesale And Retail Trade; Repair Of Motor Vehicles And Motorcycles"
    H = "Transportation And Storage"
    I = "Accommodation And Food Service Activities"
    J = "Information And Communication"
    K = "Financial And Insurance Activities"
    L = "Real Estate Activities"
    M = "Professional, Scientific And Technical Activities"
    N = "Administrative And Support Service Activities"
    O = "Public Administration And Defence; Compulsory Social Security"
    P = "Education"
    Q = "Human Health And Social Work Activities"
    R = "Arts, Entertainment And Recreation"
    S = "Other Service Activities"
    T = "Activities Of Households As Employers; Undifferentiated Goods-And Services-Producing Activities Of Households For Own Use"
    U = "Activities Of Extraterritorial Organisations And Bodies"
  }
}

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {
  # 300 is the default, you may need to change this according to your needs
  confidenceLevel = 300

  controllers.LookupController = {
    needsLogging = true
    needsAuditing = false
  }

  controllers.SearchController = {
    needsLogging = true
    needsAuditing = false
  }
}


# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  name = ${appName}
}


# Microservice specific config

auditing {
  enabled=false
  traceRequests=true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}


mongodb {
  uri = "mongodb://localhost:27017/industry-classification-lookup"
}


microservice {
  services {
    auth {
      host=localhost
      port=8500
    }
  }
}


